/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB       &kp Q  &kp W  &kp E     &kp R             &kp T        &kp Y      &kp U              &kp I              &kp O    &kp P          &kp BSPC
&kp ESCAPE    &kp A  &kp S  &kp D     &mt LEFT_SHIFT F  &kp G        &kp H      &mt RIGHT_SHIFT J  &kp K              &kp L    &kp SEMICOLON  &kp SQT
&kp LEFT_ALT  &kp Z  &kp X  &kp C     &kp V             &kp B        &kp N      &kp M              &kp COMMA          &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
                            &kp LGUI  &mo 2             &kp ENTER    &kp SPACE  &mo 1              &kp RIGHT_CONTROL
            >;

            label = "c=3";
        };

        lower_layer {
            bindings = <
&trans  &trans  &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans    &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp UP            &trans      &trans  &trans
&trans  &kp N1  &kp N2      &kp N3             &kp N4           &kp N5    &trans                &kp LEFT              &kp DOWN          &kp RIGHT   &trans  &trans
&trans  &kp N6  &kp N7      &kp N8             &kp N9           &kp N0    &trans                &kp C_PREVIOUS        &kp C_PLAY_PAUSE  &kp C_NEXT  &trans  &trans
                            &trans             &trans           &trans    &trans                &trans                &trans
            >;

            label = "c==3";
        };

        raise_layer {
            bindings = <
&trans  &kp AMPERSAND  &kp HASH       &kp DOUBLE_QUOTES  &kp SQT    &kp EXCLAMATION    &kp QUESTION  &kp LESS_THAN         &kp GREATER_THAN       &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
&trans  &kp PERCENT    &kp ASTERISK   &kp SLASH          &kp COLON  &kp EQUAL          &kp TILDE     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR      &kp BACKSLASH    &trans
&trans  &kp PIPE       &kp SEMICOLON  &kp UNDERSCORE     &kp PLUS   &kp MINUS          &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AT_SIGN     &trans           &trans
                                      &trans             &trans     &trans             &trans        &trans                &trans
            >;

            label = "c==3";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans      &trans  &trans      &trans        &trans  &trans              &kp LC(UP_ARROW)    &trans               &trans  &trans
&trans  &trans  &bt BT_PRV  &trans  &bt BT_NXT  &bt BT_CLR    &trans  &kp LC(LEFT_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)  &trans  &trans
&trans  &trans  &trans      &trans  &trans      &trans        &trans  &kp LG(PLUS)        &kp LG(MINUS)       &trans               &trans  &trans
                            &trans  &trans      &trans        &trans  &trans              &trans
            >;

            label = "c===3";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        keyboard_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
